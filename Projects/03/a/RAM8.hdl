// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=ld0, b=ld1, c=ld2, d=ld3, e=ld4, f=ld5, g=ld6, h=ld7);

    Register(in=in, load=ld0, out=rg0);
    Register(in=in, load=ld1, out=rg1);
    Register(in=in, load=ld2, out=rg2);
    Register(in=in, load=ld3, out=rg3);
    Register(in=in, load=ld4, out=rg4);
    Register(in=in, load=ld5, out=rg5);
    Register(in=in, load=ld6, out=rg6);
    Register(in=in, load=ld7, out=rg7);

    Mux8Way16(a=rg0, b=rg1, c=rg2, d=rg3, e=rg4, f=rg5, g=rg6, h=rg7, sel=address, out=out);
}
